name: Deploy to EC2 via Docker Hub

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Java 17 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Gradle 빌드
      - name: Build with Gradle
        run: ./gradlew clean build

      # 빌드된 JAR 파일을 프로젝트 루트로 이동
      - name: Move JAR to Project Root
        run: |
          cp build/libs/*.jar app.jar

      # Docker 로그인
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Docker 이미지 빌드 및 푸시
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/cicd-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/cicd-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Setup SSH and Deploy
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem

          # ✅ EC2에서 프로젝트 폴더가 없으면 생성
          ssh -o StrictHostKeyChecking=no -i private_key.pem $EC2_USER@$EC2_HOST << 'EOF'
            if [ ! -d "$HOME/cicd" ]; then
              mkdir -p $HOME/cicd
            fi
          EOF

      # ✅ `docker-compose.yml` 위치 확인 및 절대 경로 복사
      - name: Find and Move docker-compose.yml to Root
        run: |
          echo "✅ 현재 디렉토리 확인"
          pwd
          echo "✅ docker-compose.yml 위치 확인"
          find $GITHUB_WORKSPACE -name "docker-compose.yml"

          echo "✅ docker-compose.yml을 프로젝트 루트로 이동"
          cp $GITHUB_WORKSPACE/docker-compose.yml $GITHUB_WORKSPACE/docker-compose.yml

      # ✅ `docker-compose.yml`을 EC2로 복사
      - name: Copy docker-compose.yml to EC2
        run: |
          echo "✅ EC2로 docker-compose.yml 파일 복사"
          scp -o StrictHostKeyChecking=no -i private_key.pem $GITHUB_WORKSPACE/docker-compose.yml $EC2_USER@$EC2_HOST:$HOME/cicd/docker-compose.yml

      # ✅ EC2에서 최신 애플리케이션 컨테이너 실행
      - name: Run docker-compose on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key.pem $EC2_USER@$EC2_HOST << 'EOF'
          export DOCKER_USERNAME=${DOCKER_USERNAME}
          
          cd $HOME/cicd  # ✅ 프로젝트 폴더 이동

          # ✅ 최신 애플리케이션 이미지 가져오기
          echo "✅ 최신 애플리케이션 이미지 가져오기"
          docker pull ${DOCKER_USERNAME}/cicd-app:latest
          
          # ✅ `docker-compose up -d --remove-orphans` 실행
          echo "✅ docker-compose 실행"
          docker-compose up -d --remove-orphans
          EOF

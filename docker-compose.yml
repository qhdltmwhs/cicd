networks:
  app_network:

services:
  nginx:
    image: nginx:latest
    container_name: nginx-container
    restart: always
    ports:
      - "80:80"  # ✅ 클라이언트 요청을 80번 포트에서 수신
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro  # ✅ Nginx 설정 파일 추가
    depends_on:
      - cicd-app-blue
      - cicd-app-green  # ✅ Blue-Green 배포 적용
    networks:
      - app_network

  cicd-app-blue:
    container_name: cicd-app-blue
    image: mone921111/cicd-app-blue:latest  # ✅ Blue 버전
    restart: always
    depends_on:
      - mysql-container
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    ports:
      - "8081:8080"  # ✅ Blue는 8081 포트에서 실행
    networks:
      - app_network

  cicd-app-green:
    container_name: cicd-app-green
    image: mone921111/cicd-app-green:latest  # ✅ Green 버전
    restart: always
    depends_on:
      - mysql-container
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    ports:
      - "8082:8080"  # ✅ Green은 8082 포트에서 실행
    networks:
      - app_network

  mysql-container:
    image: mysql:8.0
    container_name: mysql-container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 1318
      MYSQL_DATABASE: demo_db
      MYSQL_USER: demo_user
      MYSQL_PASSWORD: 1318
    volumes:
      - mysql_data:/var/lib/mysql  # ✅ MySQL 데이터를 영구 저장
    networks:
      - app_network

volumes:
  mysql_data:
